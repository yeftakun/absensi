<div style="display: flex; min-height: 100vh;">
    <%- include('layouts/nav') %>
  
    <main class="container py-4" style="flex-grow: 1;">
      <!-- Header -->
      <%- include('layouts/header-main') %>
  
      <!-- Summary Sesi -->
      <div class="row mb-4">
        <div class="col-12">
          <div class="card text-white bg-info">
            <div class="card-body d-flex justify-content-between align-items-center">
              <div>
                <h5 class="card-title">Ringkasan Sesi</h5>
                <%
                  // Hitung total, aktif, selesai
                  const totalSesi = sessions.length;
                  const now = new Date();
                  let aktif = 0, selesai = 0;
                  sessions.forEach(s => {
                    if (new Date(s.as_start_time) <= now && new Date(s.as_end_time) >= now) {
                      aktif++;
                    } else {
                      selesai++;
                    }
                  });
                %>
                <p class="card-text mb-0">
                  Total Sesi: <strong><%= totalSesi %></strong>
                  | Aktif: <strong><%= aktif %></strong>
                  | Selesai: <strong><%= selesai %></strong>
                </p>
              </div>
              <!-- <a href="#" class="btn btn-light">Tambah Sesi</a> -->
              <button class="btn btn-light" data-bs-toggle="modal" data-bs-target="#modalTambahSesi">
                <i class="bi bi-plus"></i> Tambah Sesi
              </button>   
            </div>
          </div>
        </div>
      </div>

      <!-- Modal Tambah sesi -->
    <div class="modal fade" id="modalTambahSesi" tabindex="-1" aria-labelledby="modalTambahSesiLabel" aria-hidden="true">
      <div class="modal-dialog">
        <form action="/session/add" method="POST" class="modal-content">
          <div class="modal-header">
            <h5 class="modal-title" id="modalTambahSesiLabel">Tambah Sesi Presensi</h5>
            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
          </div>
          <div class="modal-body">
            <div class="mb-3">
              <label for="as_name" class="form-label">Nama sesi</label>
              <input type="text" name="as_name" class="form-control" id="as_name" required>
            </div>
            <div class="mb-3">
              <label for="as_type" class="form-label">Session Type</label>
              <select name="as_type" id="as_type" class="form-select" required>
                <!-- <option value="">Select Type</option> -->
                <option value="class">Class</option>
                <option value="event">Event</option>
              </select>
            </div>
            <div class="mb-3">
              <label for="as_start_time" class="form-label">Waktu Mulai</label>
              <input type="datetime-local" name="as_start_time" class="form-control" id="as_start_time" required>
            </div>
            <div class="mb-3">
              <label for="as_end_time" class="form-label">Waktu Berakhir</label>
              <input type="datetime-local" name="as_end_time" class="form-control" id="as_end_time" required>
            </div>
            <div class="mb-3">
              <label for="number_of_student" class="form-label">Estimasi Jumlah Siswa</label>
              <input type="number" min="1" name="number_of_student" class="form-control" id="number_of_student" required>
              <small class="form-text text-muted">
                Ini akan digunakan untuk menghitung persentase siswa yang sudah absen pada sesi ini.
              </small>
            </div>
          </div>
          <div class="modal-footer">
            <button type="submit" class="btn btn-primary">Simpan</button>
            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Batal</button>
          </div>
        </form>
      </div>
    </div>
  
      <!-- Filter & Search -->
      <div class="row mb-3 align-items-end">
        <div class="col-md-4">
          <label for="searchInput" class="form-label">Cari Sesi</label>
          <input type="text" id="searchInput" class="form-control" placeholder="Cari berdasarkan nama atau kelas...">
        </div>
        <div class="col-md-4">
          <label for="sortDropdown" class="form-label">Diurutkan</label>
          <select id="sortDropdown" class="form-select">
            <option value="waktu-desc" selected>Waktu Terbaru</option>
            <option value="waktu-asc">Waktu Terlama</option>
            <option value="kelas-asc">Nama Sesi (A-Z)</option>
            <option value="kelas-desc">Nama Sesi (Z-A)</option>
          </select>
        </div>
        <div class="col-md-4">
          <label for="statusFilter" class="form-label">Filter Status</label>
          <select id="statusFilter" class="form-select">
            <option value="all">Semua</option>
            <option value="active">Aktif</option>
            <option value="inactive">Nonaktif</option>
          </select>
        </div>
      </div>
  
      <!-- Daftar Sesi (Tabel) -->
        <div class="table-responsive mb-4" id="tableWrapper">
            <table class="table table-striped table-bordered align-middle">
            <thead class="table-dark" style="position: sticky; top: 0; z-index: 1;">
            <tr>
              <th>#</th>
              <th>Nama Sesi</th>
              <th>Jenis</th>
              <th>Mulai</th>
              <th>Berakhir</th>
              <th>Estimasi Siswa</th>
              <th>Status</th>
              <th>Aksi</th>
            </tr>
          </thead>
          <tbody id="sessionTableBody">
            <% sessions.forEach((session, index) => { 
                // Determine status for data-status attribute
                let status = (new Date(session.as_start_time) <= new Date() && new Date(session.as_end_time) >= new Date()) ? 'active' : 'inactive';
            %>
            <tr 
              data-name="<%= session.as_name.toLowerCase() %>" 
              data-type="<%= session.as_type %>"
              data-start="<%= session.as_start_time %>"
              data-end="<%= session.as_end_time %>"
              data-status="<%= status %>"
              data-number-of-student="<%= session.number_of_student || '' %>"
            >
              <td><%= index + 1 %></td>
              <td><%= session.as_name %></td>
              <td><%= session.as_type === 'class' ? 'Kelas' : 'Acara' %></td>
              <td><%= session.as_start_time %></td>
              <td><%= session.as_end_time %></td>
              <td><%= session.number_of_student || '-' %></td>
              <td>
                <% if (status === 'active') { %>
                  <span class="badge bg-success">Aktif</span>
                <% } else { %>
                  <span class="badge bg-secondary">Selesai</span>
                <% } %>
              </td>
              <td>
                <a href="/session_monitor/<%= session.as_id %>" class="btn btn-sm btn-primary">Pantau</a>
                <button 
                  type="button" 
                  class="btn btn-sm btn-warning ms-1 btn-edit-session"
                  data-session-id="<%= session.as_id %>"
                  data-session-name="<%= session.as_name %>"
                  data-session-type="<%= session.as_type %>"
                  data-session-start="<%= session.as_start_time ? session.as_start_time.replace(' ', 'T') : '' %>"
                  data-session-end="<%= session.as_end_time ? session.as_end_time.replace(' ', 'T') : '' %>"
                  data-bs-toggle="modal"
                  data-bs-target="#modalEditSesi"
                >
                  Edit
                </button>
                <button 
                  type="button" 
                  class="btn btn-sm btn-danger ms-1 btn-delete-session" 
                  data-bs-toggle="modal" 
                  data-bs-target="#modalDeleteSession"
                  data-session-id="<%= session.as_id %>"
                  data-session-name="<%= session.as_name %>"
                >
                  Hapus
                </button>
              </td>
            </tr>
            <% }); %>
            </tbody>
        </table>
        </div>

        <!-- Modal Konfirmasi Hapus Sesi -->
        <div class="modal fade" id="modalDeleteSession" tabindex="-1" aria-labelledby="modalDeleteSessionLabel" aria-hidden="true">
          <div class="modal-dialog">
            <form id="deleteSessionForm" method="POST">
              <div class="modal-content">
                <div class="modal-header">
                  <h5 class="modal-title" id="modalDeleteSessionLabel">Konfirmasi Hapus Sesi</h5>
                  <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Tutup"></button>
                </div>
                <div class="modal-body">
                  <p>Yakin ingin menghapus sesi <strong id="deleteSessionName"></strong>?</p>
                </div>
                <div class="modal-footer">
                  <button type="submit" class="btn btn-danger">Hapus</button>
                  <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Batal</button>
                </div>
              </div>
            </form>
          </div>
        </div>

        <!-- Modal Edit Sesi -->
        <div class="modal fade" id="modalEditSesi" tabindex="-1" aria-labelledby="modalEditSesiLabel" aria-hidden="true">
          <div class="modal-dialog">
            <form id="formEditSesi" method="POST" class="modal-content">
              <div class="modal-header">
                <h5 class="modal-title" id="modalEditSesiLabel">Edit Sesi Presensi</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Tutup"></button>
              </div>
              <div class="modal-body">
                <div class="mb-3">
                  <label for="edit_as_name" class="form-label">Nama sesi</label>
                  <input type="text" name="as_name" class="form-control" id="edit_as_name" required>
                </div>
                <div class="mb-3">
                  <label for="edit_as_type" class="form-label">Session Type</label>
                  <select name="as_type" id="edit_as_type" class="form-select" required>
                    <option value="class">Class</option>
                    <option value="event">Event</option>
                  </select>
                </div>
                <div class="mb-3">
                  <label for="edit_as_start_time" class="form-label">Waktu Mulai</label>
                  <input type="datetime-local" name="as_start_time" class="form-control" id="edit_as_start_time" required>
                </div>
                <div class="mb-3">
                  <label for="edit_as_end_time" class="form-label">Waktu Berakhir</label>
                  <input type="datetime-local" name="as_end_time" class="form-control" id="edit_as_end_time" required>
                </div>
                <div class="mb-3">
                  <label for="edit_number_of_student" class="form-label">Estimasi Jumlah Siswa</label>
                  <input type="number" min="1" name="number_of_student" class="form-control" id="edit_number_of_student" required>
                  <small class="form-text text-muted">
                    Ini akan digunakan untuk menghitung persentase siswa yang sudah absen pada sesi ini.
                  </small>
                </div>
              </div>
              <div class="modal-footer">
                <button type="submit" class="btn btn-primary">Simpan Perubahan</button>
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Batal</button>
              </div>
            </form>
          </div>
        </div>
    </main>
  </div>
  
<script>
    document.addEventListener("DOMContentLoaded", function () {
      const tableBody = document.getElementById("sessionTableBody");
      const rows = Array.from(tableBody.getElementsByTagName("tr"));
      const searchInput = document.getElementById("searchInput");
      const sortDropdown = document.getElementById("sortDropdown");
      const statusFilter = document.getElementById("statusFilter");

      // Table scroll if > 10 rows
      if (rows.length > 10) {
        const tableWrapper = document.getElementById("tableWrapper");
        tableWrapper.style.maxHeight = "500px";
        tableWrapper.style.overflowY = "auto";
        tableWrapper.style.border = "1px solid #dee2e6";
      }

      function filterAndSort() {
        const search = (searchInput.value || "").toLowerCase();
        const sort = sortDropdown.value;
        const status = statusFilter.value;

        // Filter
        let filteredRows = rows.filter(row => {
          const name = row.getAttribute("data-name");
          const type = row.getAttribute("data-type");
          const rowStatus = row.getAttribute("data-status");
          // Search by name or type
          const matchesSearch = name.includes(search) || type.includes(search);
          // Status filter
          const matchesStatus = (status === "all") || (rowStatus === status);
          return matchesSearch && matchesStatus;
        });

        // Sort
        filteredRows.sort((a, b) => {
          if (sort === "waktu-desc") {
            return new Date(b.getAttribute("data-start")) - new Date(a.getAttribute("data-start"));
          }
          if (sort === "waktu-asc") {
            return new Date(a.getAttribute("data-start")) - new Date(b.getAttribute("data-start"));
          }
          if (sort === "kelas-asc") {
            return a.getAttribute("data-name").localeCompare(b.getAttribute("data-name"));
          }
          if (sort === "kelas-desc") {
            return b.getAttribute("data-name").localeCompare(a.getAttribute("data-name"));
          }
          return 0;
        });

        // Remove all rows
        while (tableBody.firstChild) tableBody.removeChild(tableBody.firstChild);

        // Re-add filtered/sorted rows and update numbering
        filteredRows.forEach((row, idx) => {
          row.children[0].textContent = idx + 1;
          tableBody.appendChild(row);
        });
      }

      searchInput.addEventListener("input", filterAndSort);
      sortDropdown.addEventListener("change", filterAndSort);
      statusFilter.addEventListener("change", filterAndSort);

      // Trigger default sort/filter on page load
      filterAndSort();

      // Modal delete logic
      const modalDelete = document.getElementById('modalDeleteSession');
      const deleteForm = document.getElementById('deleteSessionForm');
      const deleteSessionName = document.getElementById('deleteSessionName');
      document.querySelectorAll('.btn-delete-session').forEach(btn => {
        btn.addEventListener('click', function () {
          const sessionId = this.getAttribute('data-session-id');
          const sessionName = this.getAttribute('data-session-name');
          deleteForm.action = '/session/delete/' + sessionId;
          deleteSessionName.textContent = sessionName;
        });
      });

      // Modal Edit Sesi
      const modalEdit = document.getElementById('modalEditSesi');
      const formEdit = document.getElementById('formEditSesi');
      document.querySelectorAll('.btn-edit-session').forEach(btn => {
        btn.addEventListener('click', function () {
          const id = btn.getAttribute('data-session-id');
          const name = btn.getAttribute('data-session-name') || '';
          const type = btn.getAttribute('data-session-type') || '';
          let start = btn.getAttribute('data-session-start') || '';
          let end = btn.getAttribute('data-session-end') || '';
          // Ambil estimasi jumlah siswa dari baris tabel (data attribute atau hidden col)
          const row = btn.closest('tr');
          let numberOfStudent = row && row.getAttribute('data-number-of-student') ? row.getAttribute('data-number-of-student') : '';
          // Format to yyyy-MM-ddTHH:mm for input[type=datetime-local]
          if (start && start.length > 16) start = start.slice(0, 16);
          if (end && end.length > 16) end = end.slice(0, 16);
          formEdit.action = `/session/edit/${id}`;
          formEdit.querySelector('#edit_as_name').value = name;
          formEdit.querySelector('#edit_as_type').value = type;
          formEdit.querySelector('#edit_as_start_time').value = start;
          formEdit.querySelector('#edit_as_end_time').value = end;
          formEdit.querySelector('#edit_number_of_student').value = numberOfStudent;
        });
      });
    });
  </script>