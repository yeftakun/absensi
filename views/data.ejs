<div style="display: flex; min-height: 100vh;">
  <%- include('layouts/nav') %>

  <main class="container py-4 position-relative" style="flex-grow: 1;">
    <!-- Floating Alert -->
    <% if (typeof alert !== 'undefined' && alert && !locals._alertShown) { %>
      <%
        locals._alertShown = true;
      %>
      <div id="floatingAlert" class="alert alert-<%= alert.type %> alert-dismissible fade show position-fixed"
        role="alert"
        style="top: 30px; right: 30px; min-width: 300px; max-width: 90vw; z-index: 2000; box-shadow: 0 2px 16px rgba(0,0,0,0.15);">
        <%= alert.message %>
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
      </div>
    <% } %>
    <!-- Header -->
    <%- include('layouts/header-main') %>

    <!-- Search Bar Overlay -->
    <!-- Modern Search Bar -->
    <div class="position-absolute top-0 end-0 mt-3 me-5">
      <div class="input-group shadow-sm" style="width: 280px;">
        <span class="input-group-text bg-white border-end-0" style="border-radius: 20px 0 0 20px;">
          <i class="bi bi-search"></i>
        </span>
        <input type="text" class="form-control border-start-0" placeholder="Cari Data..." 
              style="border-radius: 0 20px 20px 0; transition: all 0.3s ease;" id="searchGlobalInput">
      </div>
    </div>


    <!-- Wilayah Tabel Users -->
    <div class="col-md-12 mt-5 mb-4">
      <div class="table-header mb-3 d-flex justify-content-between align-items-center">
        <h4 class="card-title">Data Users</h4>
        <button class="btn btn-success" data-bs-toggle="modal" data-bs-target="#modalTambahUser">
          <i class="bi bi-plus"></i> Tambah
        </button>        
      </div>
      <div class="card border-primary">
        <div class="card-body" style="max-height: 500px; overflow-y: auto;">
          <div id="data-users" class="mb-4">
            <div class="table-responsive">
              <table class="table table-bordered table-striped align-middle">
                <thead class="table-light">
                  <tr>
                    <th>ID</th>
                    <th>Username</th>
                    <th>Email</th>
                    <th>Role</th>
                    <th>WA Number</th>
                    <th>Created</th>
                    <th>Aksi</th>
                  </tr>
                </thead>
                <tbody id="usersTableBody">
                  <!-- Ini data dinamis -->
                  <% if (users && users.length > 0) { %>
                  <% users.forEach(user => { %>
                  <tr>
                    <td><%= user.user_id || 'N/A' %></td>
                    <td><%= user.username || 'N/A' %></td>
                    <td><%= user.email || 'N/A' %></td>
                    <td><%= user.role || 'N/A' %></td>
                    <td><%= user.wa_num || 'N/A' %></td>
                    <td><%= user.created_at || 'N/A' %></td>
                    <td>
                      <button class="btn btn-sm btn-warning btn-edit-user"
                        data-id="<%= user.user_id %>"
                        data-username="<%= user.username %>"
                        data-email="<%= user.email %>"
                        data-role="<%= user.role %>"
                        data-wa="<%= user.wa_num %>">Edit</button>
                      <button class="btn btn-sm btn-danger btn-delete"
                        data-type="user"
                        data-id="<%= user.user_id %>"
                        data-name="<%= user.username %>">Hapus</button>
                    </td>
                  </tr>
                  <% }); %>
                  <% } else { %>
                  <tr>
                    <td colspan="7" class="text-center">Tidak ada data pengguna.</td>
                  </tr>
                  <% } %>
                  <!-- Contoh data statis -->
                  <!-- Tambahan data lainnya -->
                </tbody>
              </table>
            </div>
          </div>
        </div>
      </div>
    </div>

    <!-- MOdal User -->
    <!-- Modal Tambah User -->
    <div class="modal fade" id="modalTambahUser" tabindex="-1" aria-labelledby="modalTambahUserLabel" aria-hidden="true">
      <div class="modal-dialog">
        <form action="/user/add" method="POST" class="modal-content">
          <div class="modal-header">
            <h5 class="modal-title" id="modalTambahUserLabel">Tambah Data User</h5>
            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
          </div>
          <div class="modal-body">
            <div class="mb-3">
              <label for="username" class="form-label">Username</label>
              <input type="text" name="username" class="form-control" id="username" required>
            </div>
            <div class="mb-3">
              <label for="password" class="form-label">Password</label>
              <input type="password" name="password" class="form-control" id="password" required>
            </div>
            <div class="mb-3">
              <label for="email" class="form-label">Email</label>
              <input type="email" name="email" class="form-control" id="email" placeholder="Opsional, jika kosong akan diisi N/A">
            </div>
            <div class="mb-3">
              <label for="role" class="form-label">Role</label>
              <select name="role" id="role" class="form-select" required>
                <option value="">Pilih Role</option>
                <option value="admin">Admin</option>
                <option value="teacher">Guru</option>
                <option value="student">Murid</option>
                <option value="parent">Orang Tua</option>
                <option value="scanner">Scan Client</option>
              </select>
            </div>
            <div class="mb-3">
              <label for="wa_num" class="form-label">WhatsApp number</label>
              <input type="text" name="wa_num" class="form-control" id="wa_num" required>
            </div>
          </div>
          <div class="modal-footer">
            <button type="submit" class="btn btn-primary">Simpan</button>
            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Batal</button>
          </div>
        </form>
      </div>
    </div>

    <!-- Modal Edit User -->
    <div class="modal fade" id="modalEditUser" tabindex="-1" aria-labelledby="modalEditUserLabel" aria-hidden="true">
      <div class="modal-dialog">
        <form id="formEditUser" method="POST">
          <div class="modal-content">
            <div class="modal-header">
              <h5 class="modal-title" id="modalEditUserLabel">Edit Data User</h5>
              <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Tutup"></button>
            </div>
            <div class="modal-body">
              <div class="mb-3">
                <label for="edit_username" class="form-label">Username</label>
                <input type="text" name="username" class="form-control" id="edit_username" required>
              </div>
              <div class="mb-3">
                <label for="edit_email" class="form-label">Email</label>
                <input type="email" name="email" class="form-control" id="edit_email" placeholder="Opsional, jika kosong akan diisi N/A">
              </div>
              <div class="mb-3">
                <label for="edit_role" class="form-label">Role</label>
                <select name="role" id="edit_role" class="form-select" required>
                  <option value="">Pilih Role</option>
                  <option value="admin">Admin</option>
                  <option value="teacher">Guru</option>
                  <option value="student">Murid</option>
                  <option value="parent">Orang Tua</option>
                  <option value="scanner">Scan Client</option>
                </select>
              </div>
              <div class="mb-3">
                <label for="edit_wa_num" class="form-label">WhatsApp number</label>
                <input type="text" name="wa_num" class="form-control" id="edit_wa_num" required>
              </div>
              <div class="mb-3">
                <label for="edit_password" class="form-label">Password (kosongkan jika tidak ingin mengubah)</label>
                <input type="password" name="password" class="form-control" id="edit_password" autocomplete="new-password">
              </div>
            </div>
            <div class="modal-footer">
              <button type="submit" class="btn btn-primary">Simpan Perubahan</button>
              <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Batal</button>
            </div>
          </div>
        </form>
      </div>
    </div>


    <!-- Wilayah Tabel Guru -->
    <div class="col-md-12 mb-4">
      <div class="table-header mb-3 d-flex justify-content-between align-items-center">
        <h4 class="card-title">Data Guru</h4>
        <button class="btn btn-success" data-bs-toggle="modal" data-bs-target="#modalTambahGuru">
          <i class="bi bi-plus"></i> Tambah
        </button>        
      </div>
      <div class="card border-success">
        <div class="card-body" style="max-height: 500px; overflow-y: auto;">
          <div id="data-teachers" class="mb-4">
            <div class="table-responsive">
              <table class="table table-bordered table-striped align-middle">
                <thead class="table-light">
                  <tr>
                    <th>ID</th>
                    <th>Nama</th>
                    <th>NIP</th>
                    <th>Foto</th>
                    <th>User ID</th>
                    <th>Created</th>
                    <th>Aksi</th>
                  </tr>
                </thead>
                <tbody id="teachersTableBody">
                  <!-- Ini data dinamis -->
                  <% if (teachers && teachers.length > 0) { %>
                    <% teachers.forEach(teacher => { %>
                    <tr>
                      <td><%= teacher.teacher_id || 'N/A' %></td>
                      <td><%= teacher.teacher_name || 'N/A' %></td>
                      <td><%= teacher.nip || 'N/A' %></td>
                      <td><%= teacher.photo_path || 'N/A' %></td>
                      <td><%= teacher.user_id || 'N/A' %></td>
                      <td><%= teacher.created_at || 'N/A' %></td>
                      <td>
                        <button class="btn btn-sm btn-warning btn-edit-teacher"
                          data-id="<%= teacher.teacher_id %>"
                          data-name="<%= teacher.teacher_name %>"
                          data-nip="<%= teacher.nip %>"
                          data-photo="<%= teacher.photo_path %>"
                          data-username="<%= teacher.user_id %>">Edit</button>
                        <button class="btn btn-sm btn-danger btn-delete"
                          data-type="teacher"
                          data-id="<%= teacher.teacher_id %>"
                          data-name="<%= teacher.teacher_name %>">Hapus</button>
                      </td>
                    </tr>
                    <% }); %>
                    <% } else { %>
                    <tr>
                      <td colspan="7" class="text-center">Tidak ada data pengguna.</td>
                    </tr>
                    <% } %>
                  <!-- Tambahan data lainnya -->
                </tbody>
              </table>
            </div>
          </div>
        </div>
      </div>
    </div>

    <div class="modal fade" id="modalTambahGuru" tabindex="-1" aria-labelledby="modalTambahGuruLabel" aria-hidden="true">
      <div class="modal-dialog">
        <form action="/guru/add" method="POST" enctype="multipart/form-data" class="modal-content">
          <div class="modal-header">
            <h5 class="modal-title" id="modalTambahGuruLabel">Tambah Data Guru</h5>
            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
          </div>
          <div class="modal-body">
            <div class="mb-3">
              <label for="teacher_name" class="form-label">Nama Guru</label>
              <input type="text" name="teacher_name" class="form-control" id="teacher_name" required>
            </div>
            <div class="mb-3">
              <label for="nip" class="form-label">NIP</label>
              <input type="text" name="nip" class="form-control" id="nip">
            </div>
            <div class="mb-3">
              <label for="teacher_photo" class="form-label">Foto (1:1)</label>
              <input type="file" name="photo" accept="image/*" class="form-control" id="teacher_photo" onchange="previewImage(event, 'previewGuru')">
              <img id="previewGuru" class="img-thumbnail mt-2" style="display:none; max-width: 150px;">
            </div>
            <div class="mb-3 position-relative">
              <label for="username_guru" class="form-label">Username (Opsional)</label>
              <input type="text" name="username" class="form-control" id="username_guru" autocomplete="off" autocapitalize="off" spellcheck="false">
              <div id="usernameGuruAutocomplete" class="list-group position-absolute w-100" style="z-index: 1051; top:100%;"></div>
            </div>
          </div>
          <div class="modal-footer">
            <button type="submit" class="btn btn-primary">Simpan</button>
            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Batal</button>
          </div>
        </form>
      </div>
    </div>
    
    <!-- Modal Edit Guru -->
    <div class="modal fade" id="modalEditGuru" tabindex="-1" aria-labelledby="modalEditGuruLabel" aria-hidden="true">
      <div class="modal-dialog">
        <form id="formEditGuru" method="POST" enctype="multipart/form-data">
          <div class="modal-content">
            <div class="modal-header">
              <h5 class="modal-title" id="modalEditGuruLabel">Edit Data Guru</h5>
              <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Tutup"></button>
            </div>
            <div class="modal-body">
              <div class="mb-3">
                <label for="edit_teacher_name" class="form-label">Nama Guru</label>
                <input type="text" name="teacher_name" class="form-control" id="edit_teacher_name" required>
              </div>
              <div class="mb-3">
                <label for="edit_nip" class="form-label">NIP</label>
                <input type="text" name="nip" class="form-control" id="edit_nip">
              </div>
              <div class="mb-3">
                <label for="edit_teacher_photo" class="form-label">Foto (1:1)</label>
                <input type="file" name="photo" accept="image/*" class="form-control" id="edit_teacher_photo" onchange="previewImage(event, 'previewEditGuru')">
                <img id="previewEditGuru" class="img-thumbnail mt-2" style="display:none; max-width: 150px;">
                <div id="currentPhotoGuru" class="mt-2"></div>
              </div>
              <div class="mb-3 position-relative">
                <label for="edit_username_guru" class="form-label">Username (Opsional)</label>
                <input type="text" name="username" class="form-control" id="edit_username_guru" autocomplete="off" autocapitalize="off" spellcheck="false">
                <div id="editUsernameGuruAutocomplete" class="list-group position-absolute w-100" style="z-index: 1051; top:100%;"></div>
              </div>
            </div>
            <div class="modal-footer">
              <button type="submit" class="btn btn-primary">Simpan Perubahan</button>
              <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Batal</button>
            </div>
          </div>
        </form>
      </div>
    </div>

    <!-- Tambahkan Tabel lainnya -->
     <!-- Wilayah Tabel Orang Tua -->
    <div class="col-md-12 mb-4">
      <div class="table-header mb-3 d-flex justify-content-between align-items-center">
        <h4 class="card-title">Data Orang Tua</h4>
        <button class="btn btn-success" data-bs-toggle="modal" data-bs-target="#modalTambahOrangTua">
          <i class="bi bi-plus"></i> Tambah
        </button>        
      </div>
      <div class="card border-warning">
        <div class="card-body" style="max-height: 500px; overflow-y: auto;">
          <div id="data-parents" class="mb-4">
            <div class="table-responsive">
              <table class="table table-bordered table-striped align-middle">
                <thead class="table-light">
                  <tr>
                    <th>ID</th>
                    <th>Nama Orang Tua</th>
                    <th>User ID</th>
                    <th>Created</th>
                    <th>Updated</th>
                    <th>Aksi</th>
                  </tr>
                </thead>
                <tbody id="parentsTableBody">
                  <!-- Ini data dinamis -->
                  <% if (parents && parents.length > 0) { %>
                    <% parents.forEach(parent => { %>
                    <tr>
                      <td><%= parent.parent_id || 'N/A' %></td>
                      <td><%= parent.parent_name || 'N/A' %></td>
                      <td><%= parent.user_id || 'N/A' %></td>
                      <td><%= parent.created_at || 'N/A' %></td>
                      <td><%= parent.updated_at || 'N/A' %></td>
                      <td>
                        <button class="btn btn-sm btn-warning btn-edit-parent"
                          data-id="<%= parent.parent_id %>"
                          data-name="<%= parent.parent_name %>"
                          data-username="<%= parent.user_id %>">Edit</button>
                        <button class="btn btn-sm btn-danger btn-delete"
                          data-type="parent"
                          data-id="<%= parent.parent_id %>"
                          data-name="<%= parent.parent_name %>">Hapus</button>
                      </td>
                    </tr>
                    <% }); %>
                    <% } else { %>
                    <tr>
                      <td colspan="7" class="text-center">Tidak ada data pengguna.</td>
                    </tr>
                  <% } %>
                  <!-- Tambahan data lainnya -->
                </tbody>
              </table>
            </div>
          </div>
        </div>
      </div>
    </div>

    <div class="modal fade" id="modalTambahOrangTua" tabindex="-1" aria-labelledby="modalTambahOrangTuaLabel" aria-hidden="true">
      <div class="modal-dialog">
        <form action="/orangtua/add" method="POST" class="modal-content">
          <div class="modal-header">
            <h5 class="modal-title" id="modalTambahOrangTuaLabel">Tambah Data Orang Tua</h5>
            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
          </div>
          <div class="modal-body">
            <div class="mb-3">
              <label for="parent_name" class="form-label">Nama Orang Tua</label>
              <input type="text" name="parent_name" class="form-control" id="parent_name" required>
            </div>
            <div class="mb-3 position-relative">
              <label for="username_ot" class="form-label">Username (Opsional)</label>
              <input type="text" name="username" class="form-control" id="username_ot" autocomplete="off" autocapitalize="off" spellcheck="false">
              <div id="usernameParentAutocomplete" class="list-group position-absolute w-100" style="z-index: 1051; top:100%;"></div>
            </div>
          </div>
          <div class="modal-footer">
            <button type="submit" class="btn btn-primary">Simpan</button>
            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Batal</button>
          </div>
        </form>
      </div>
    </div>
    
    <!-- Modal Edit Orang Tua -->
    <div class="modal fade" id="modalEditParent" tabindex="-1" aria-labelledby="modalEditParentLabel" aria-hidden="true">
      <div class="modal-dialog">
        <form id="formEditParent" method="POST">
          <div class="modal-content">
            <div class="modal-header">
              <h5 class="modal-title" id="modalEditParentLabel">Edit Data Orang Tua</h5>
              <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Tutup"></button>
            </div>
            <div class="modal-body">
              <div class="mb-3">
                <label for="edit_parent_name" class="form-label">Nama Orang Tua</label>
                <input type="text" name="parent_name" class="form-control" id="edit_parent_name" required>
              </div>
              <div class="mb-3 position-relative">
                <label for="edit_username_ot" class="form-label">Username (Opsional)</label>
                <input type="text" name="username" class="form-control" id="edit_username_ot" autocomplete="off" autocapitalize="off" spellcheck="false">
                <div id="editUsernameParentAutocomplete" class="list-group position-absolute w-100" style="z-index: 1051; top:100%;"></div>
              </div>
            </div>
            <div class="modal-footer">
              <button type="submit" class="btn btn-primary">Simpan Perubahan</button>
              <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Batal</button>
            </div>
          </div>
        </form>
      </div>
    </div>

    <!-- Wilayah Tabel Siswa -->
    <div class="col-md-12 mb-4">
      <div class="table-header mb-3 d-flex justify-content-between align-items-center">
        <h4 class="card-title">Data Siswa</h4>
        <button class="btn btn-success" data-bs-toggle="modal" data-bs-target="#modalTambahSiswa">
          <i class="bi bi-plus"></i> Tambah
        </button>        
      </div>
      <div class="card border-info">
        <div class="card-body" style="max-height: 500px; overflow-y: auto;">
          <div id="data-students" class="mb-4">
            <div class="table-responsive">
              <table class="table table-bordered table-striped align-middle">
                <thead class="table-light">
                  <tr>
                    <th>ID</th>
                    <th>NIS</th>
                    <th>NISN</th>
                    <th>Nama</th>
                    <th>Tanggal Lahir</th>
                    <th>Tempat Lahir</th>
                    <th>Foto</th>
                    <th>Alamat</th>
                    <th>RFID</th>
                    <th>User ID</th>
                    <th>Parent ID</th>
                    <th>Created</th>
                    <th>Updated</th>
                    <th>Aksi</th>
                  </tr>
                </thead>
                <tbody id="studentsTableBody">
                  <!-- Ini data dinamis -->
                  <% if (students && students.length > 0) { %>
                    <% students.forEach(student => { %>
                    <tr>
                      <td><%= student.student_id || 'N/A' %></td>
                      <td><%= student.nis || 'N/A' %></td>
                      <td><%= student.nisn || 'N/A' %></td>
                      <td><%= student.student_name || 'N/A' %></td>
                      <td><%= student.pob || 'N/A' %></td>
                      <td><%= student.dob || 'N/A' %></td>
                      <td><%= student.photo_path || 'N/A' %></td>
                      <td><%= student.address || 'N/A' %></td>
                      <td><%= student.rfid || 'N/A' %></td>
                      <td><%= student.user_id || 'N/A' %></td>
                      <td><%= student.parent_id || 'N/A' %></td>
                      <td><%= student.created_at || 'N/A' %></td>
                      <td><%= student.updated_at || 'N/A' %></td>
                      <td>
                        <button class="btn btn-sm btn-warning btn-edit-student"
                          data-id="<%= student.student_id %>"
                          data-name="<%= student.student_name %>"
                          data-nis="<%= student.nis %>"
                          data-nisn="<%= student.nisn %>"
                          data-dob="<%= student.dob %>"
                          data-pob="<%= student.pob %>"
                          data-photo="<%= student.photo_path %>"
                          data-address="<%= student.address %>"
                          data-rfid="<%= student.rfid %>"
                          data-username="<%= student.user_id %>"
                          data-parentid="<%= student.parent_id %>">Edit</button>
                        <button class="btn btn-sm btn-danger btn-delete"
                          data-type="student"
                          data-id="<%= student.student_id %>"
                          data-name="<%= student.student_name %>">Hapus</button>
                      </td>
                    </tr>
                    <% }); %>
                    <% } else { %>
                    <tr>
                      <td colspan="7" class="text-center">Tidak ada data pengguna.</td>
                    </tr>
                  <% } %>
                </tbody>
              </table>
            </div>
          </div>
        </div>
      </div>
    </div>

    <div class="modal fade" id="modalTambahSiswa" tabindex="-1" aria-labelledby="modalTambahSiswaLabel" aria-hidden="true">
      <div class="modal-dialog">
        <form action="/siswa/add" method="POST" enctype="multipart/form-data" class="modal-content">
          <div class="modal-header">
            <h5 class="modal-title" id="modalTambahSiswaLabel">Tambah Data Siswa</h5>
            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
          </div>
          <div class="modal-body">
            <div class="mb-3">
              <label for="student_name" class="form-label">Nama Siswa</label>
              <input type="text" name="student_name" class="form-control" id="student_name" required>
            </div>
            <div class="mb-3">
              <label for="nis" class="form-label">NIS</label>
              <input type="text" name="nis" class="form-control" id="nis" required>
            </div>
            <div class="mb-3">
              <label for="nisn" class="form-label">NISN</label>
              <input type="text" name="nisn" class="form-control" id="nisn" required>
            </div>
            <div class="mb-3">
              <label for="dob" class="form-label">Tanggal Lahir</label>
              <input type="date" name="dob" class="form-control" id="dob" value="<%= (new Date()).toISOString().slice(0,10) %>">
            </div>
            <div class="mb-3">
              <label for="pob" class="form-label">Tempat Lahir</label>
              <input type="text" name="pob" class="form-control" id="pob">
            </div>
            <div class="mb-3">
              <label for="address" class="form-label">Alamat</label>
              <input type="text" name="address" class="form-control" id="address">
            </div>
            <div class="mb-3">
              <label for="student_photo" class="form-label">Foto (1:1)</label>
              <input type="file" name="photo" accept="image/*" class="form-control" id="student_photo" onchange="previewImage(event, 'previewSiswa')">
              <img id="previewSiswa" class="img-thumbnail mt-2" style="display:none; max-width: 150px;">
            </div>
            <div class="mb-3">
              <label for="rfid" class="form-label">RFID (opsional)</label>
              <input type="text" name="rfid" class="form-control" id="rfid">
            </div>
            <div class="mb-3 position-relative">
              <label for="username_siswa" class="form-label">Username (Opsional)</label>
              <input type="text" name="username" class="form-control" id="username_siswa" autocomplete="off" autocapitalize="off" spellcheck="false">
              <div id="usernameSiswaAutocomplete" class="list-group position-absolute w-100" style="z-index: 1051; top:100%;"></div>
            </div>
            <div class="mb-3 position-relative">
              <label for="parent_id" class="form-label">Orang tua</label>
              <input type="text" name="parent_id" class="form-control" id="parent_id" autocomplete="off" autocapitalize="off" spellcheck="false" placeholder="Cari Nama Orang Tua">
              <div id="parentSiswaAutocomplete" class="list-group position-absolute w-100" style="z-index: 1051; top:100%;"></div>
            </div>
          </div>
          <div class="modal-footer">
            <button type="submit" class="btn btn-primary">Simpan</button>
            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Batal</button>
          </div>
        </form>
      </div>
    </div>
    
    <div class="modal fade" id="modalEditSiswa" tabindex="-1" aria-labelledby="modalEditSiswaLabel" aria-hidden="true">
      <div class="modal-dialog">
        <form id="formEditSiswa" method="POST" enctype="multipart/form-data">
          <div class="modal-content">
            <div class="modal-header">
              <h5 class="modal-title" id="modalEditSiswaLabel">Edit Data Siswa</h5>
              <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Tutup"></button>
            </div>
            <div class="modal-body">
              <div class="mb-3">
                <label for="edit_student_name" class="form-label">Nama Siswa</label>
                <input type="text" name="student_name" class="form-control" id="edit_student_name" required>
              </div>
              <div class="mb-3">
                <label for="edit_nis" class="form-label">NIS</label>
                <input type="text" name="nis" class="form-control" id="edit_nis" required>
              </div>
              <div class="mb-3">
                <label for="edit_nisn" class="form-label">NISN</label>
                <input type="text" name="nisn" class="form-control" id="edit_nisn" required>
              </div>
              <div class="mb-3">
                <label for="edit_dob" class="form-label">Tanggal Lahir</label>
                <input type="date" name="dob" class="form-control" id="edit_dob" required>
              </div>
              <div class="mb-3">
                <label for="edit_pob" class="form-label">Tempat Lahir</label>
                <input type="text" name="pob" class="form-control" id="edit_pob" required>
              </div>
              <div class="mb-3">
                <label for="edit_address" class="form-label">Alamat</label>
                <input type="text" name="address" class="form-control" id="edit_address" required>
              </div>
              <div class="mb-3">
                <label for="edit_student_photo" class="form-label">Foto (1:1)</label>
                <input type="file" name="photo" accept="image/*" class="form-control" id="edit_student_photo" onchange="previewImage(event, 'previewEditSiswa')">
                <img id="previewEditSiswa" class="img-thumbnail mt-2" style="display:none; max-width: 150px;">
                <div id="currentPhotoSiswa" class="mt-2"></div>
              </div>
              <div class="mb-3">
                <label for="edit_rfid" class="form-label">RFID (opsional)</label>
                <input type="text" name="rfid" class="form-control" id="edit_rfid">
              </div>
              <div class="mb-3 position-relative">
                <label for="edit_username_siswa" class="form-label">Username (Opsional)</label>
                <input type="text" name="username" class="form-control" id="edit_username_siswa" autocomplete="off" autocapitalize="off" spellcheck="false">
                <div id="editUsernameSiswaAutocomplete" class="list-group position-absolute w-100" style="z-index: 1051; top:100%;"></div>
              </div>
              <div class="mb-3 position-relative">
                <label for="edit_parent_id" class="form-label">Orang tua</label>
                <input type="text" name="parent_id" class="form-control" id="edit_parent_id" autocomplete="off" autocapitalize="off" spellcheck="false" placeholder="Cari Nama Orang Tua">
                <div id="editParentSiswaAutocomplete" class="list-group position-absolute w-100" style="z-index: 1051; top:100%;"></div>
              </div>
            </div>
            <div class="modal-footer">
              <button type="submit" class="btn btn-primary">Simpan Perubahan</button>
              <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Batal</button>
            </div>
          </div>
        </form>
      </div>
    </div>
    
    <div class="modal fade" id="modalDeleteConfirm" tabindex="-1" aria-labelledby="modalDeleteConfirmLabel" aria-hidden="true">
      <div class="modal-dialog">
        <form id="formDeleteConfirm" method="POST">
          <div class="modal-content">
            <div class="modal-header">
              <h5 class="modal-title" id="modalDeleteConfirmLabel">Konfirmasi Hapus</h5>
              <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Tutup"></button>
            </div>
            <div class="modal-body">
              <p id="deleteConfirmText">Apakah Anda yakin ingin menghapus data ini?</p>
            </div>
            <div class="modal-footer">
              <button type="submit" class="btn btn-danger">Hapus</button>
              <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Batal</button>
            </div>
          </div>
        </form>
      </div>
    </div>

    <% /* Form/input yang ingin diisi otomatis */ %>
    <input type="text" id="rfid-input" placeholder="Tempelkan kartu RFID..." autofocus>
  </main>
</div>
<script>
  function previewImage(event, previewId) {
    const input = event.target;
    const reader = new FileReader();

    reader.onload = function(){
      const img = document.getElementById(previewId);
      img.src = reader.result;
      img.style.display = 'block';
    };

    if(input.files[0]) {
      reader.readAsDataURL(input.files[0]);
    }
  }

  // Global searchbar filter for all tables
  document.addEventListener("DOMContentLoaded", function () {
    const searchInput = document.getElementById('searchGlobalInput');
    const tableBodies = [
      document.getElementById('usersTableBody'),
      document.getElementById('teachersTableBody'),
      document.getElementById('parentsTableBody'),
      document.getElementById('studentsTableBody')
    ];
    if (!searchInput) return;
    searchInput.addEventListener('input', function () {
      const search = this.value.toLowerCase();
      tableBodies.forEach(tableBody => {
        if (!tableBody) return;
        Array.from(tableBody.getElementsByTagName('tr')).forEach(row => {
          // Only filter data rows, not the "Tidak ada data pengguna" row
          if (row.querySelectorAll('td').length < 2) return;
          const text = row.textContent.toLowerCase();
          row.style.display = text.includes(search) ? '' : 'none';
        });
      });
    });
  });

  // Floating alert auto-dismiss after 5 seconds
  document.addEventListener("DOMContentLoaded", function () {
    const alertEl = document.getElementById('floatingAlert');
    if (alertEl) {
      setTimeout(() => {
        if (window.bootstrap && bootstrap.Alert) {
          // Bootstrap 5
          const bsAlert = bootstrap.Alert.getOrCreateInstance(alertEl);
          bsAlert.close();
        } else {
          // Fallback
          alertEl.classList.remove('show');
          setTimeout(() => alertEl.remove(), 500);
        }
      }, 5000);
    }
  });

  // Autocomplete username guru
  document.addEventListener("DOMContentLoaded", function () {
    const input = document.getElementById('username_guru');
    const list = document.getElementById('usernameGuruAutocomplete');
    let currentFocus = -1;

    if (input) {
      input.addEventListener('input', async function () {
        const val = this.value.trim();
        list.innerHTML = '';
        list.style.display = 'none';
        if (val.length < 1) return;
        try {
          const res = await fetch(`/api/teacher-usernames?q=${encodeURIComponent(val)}`);
          if (!res.ok) return;
          const data = await res.json();
          if (Array.isArray(data) && data.length > 0) {
            data.forEach(username => {
              const item = document.createElement('button');
              item.type = 'button';
              item.className = 'list-group-item list-group-item-action';
              item.textContent = username;
              item.onclick = function () {
                input.value = username;
                list.innerHTML = '';
                list.style.display = 'none';
              };
              list.appendChild(item);
            });
            list.style.display = 'block';
          }
        } catch (e) {
          // ignore error
        }
      });

      // Hide autocomplete when clicking outside
      document.addEventListener('click', function (e) {
        if (!input.contains(e.target) && !list.contains(e.target)) {
          list.innerHTML = '';
          list.style.display = 'none';
        }
      });

      // Keyboard navigation
      input.addEventListener('keydown', function(e) {
        const items = list.querySelectorAll('.list-group-item');
        if (!items.length) return;
        if (e.key === 'ArrowDown') {
          currentFocus++;
          if (currentFocus >= items.length) currentFocus = 0;
          items.forEach((el, idx) => el.classList.toggle('active', idx === currentFocus));
          e.preventDefault();
        } else if (e.key === 'ArrowUp') {
          currentFocus--;
          if (currentFocus < 0) currentFocus = items.length - 1;
          items.forEach((el, idx) => el.classList.toggle('active', idx === currentFocus));
          e.preventDefault();
        } else if (e.key === 'Enter') {
          if (currentFocus > -1 && items[currentFocus]) {
            items[currentFocus].click();
            e.preventDefault();
          }
        } else {
          currentFocus = -1;
        }
      });
    }
  });

  // Autocomplete username orang tua
  document.addEventListener("DOMContentLoaded", function () {
    const input = document.getElementById('username_ot');
    const list = document.getElementById('usernameParentAutocomplete');
    let currentFocus = -1;

    if (input) {
      input.addEventListener('input', async function () {
        const val = this.value.trim();
        list.innerHTML = '';
        list.style.display = 'none';
        if (val.length < 1) return;
        try {
          const res = await fetch(`/api/parent-usernames?q=${encodeURIComponent(val)}`);
          if (!res.ok) return;
          const data = await res.json();
          if (Array.isArray(data) && data.length > 0) {
            data.forEach(username => {
              const item = document.createElement('button');
              item.type = 'button';
              item.className = 'list-group-item list-group-item-action';
              item.textContent = username;
              item.onclick = function () {
                input.value = username;
                list.innerHTML = '';
                list.style.display = 'none';
              };
              list.appendChild(item);
            });
            list.style.display = 'block';
          }
        } catch (e) {
          // ignore error
        }
      });

      // Hide autocomplete when clicking outside
      document.addEventListener('click', function (e) {
        if (!input.contains(e.target) && !list.contains(e.target)) {
          list.innerHTML = '';
          list.style.display = 'none';
        }
      });

      // Keyboard navigation
      input.addEventListener('keydown', function(e) {
        const items = list.querySelectorAll('.list-group-item');
        if (!items.length) return;
        if (e.key === 'ArrowDown') {
          currentFocus++;
          if (currentFocus >= items.length) currentFocus = 0;
          items.forEach((el, idx) => el.classList.toggle('active', idx === currentFocus));
          e.preventDefault();
        } else if (e.key === 'ArrowUp') {
          currentFocus--;
          if (currentFocus < 0) currentFocus = items.length - 1;
          items.forEach((el, idx) => el.classList.toggle('active', idx === currentFocus));
          e.preventDefault();
        } else if (e.key === 'Enter') {
          if (currentFocus > -1 && items[currentFocus]) {
            items[currentFocus].click();
            e.preventDefault();
          }
        } else {
          currentFocus = -1;
        }
      });
    }
  });

  // Autocomplete username siswa
  document.addEventListener("DOMContentLoaded", function () {
    const input = document.getElementById('username_siswa');
    const list = document.getElementById('usernameSiswaAutocomplete');
    let currentFocus = -1;

    if (input) {
      input.addEventListener('input', async function () {
        const val = this.value.trim();
        list.innerHTML = '';
        list.style.display = 'none';
        if (val.length < 1) return;
        try {
          const res = await fetch(`/api/student-usernames?q=${encodeURIComponent(val)}`);
          if (!res.ok) return;
          const data = await res.json();
          if (Array.isArray(data) && data.length > 0) {
            data.forEach(username => {
              const item = document.createElement('button');
              item.type = 'button';
              item.className = 'list-group-item list-group-item-action';
              item.textContent = username;
              item.onclick = function () {
                input.value = username;
                list.innerHTML = '';
                list.style.display = 'none';
              };
              list.appendChild(item);
            });
            list.style.display = 'block';
          }
        } catch (e) {}
      });

      document.addEventListener('click', function (e) {
        if (!input.contains(e.target) && !list.contains(e.target)) {
          list.innerHTML = '';
          list.style.display = 'none';
        }
      });

      input.addEventListener('keydown', function(e) {
        const items = list.querySelectorAll('.list-group-item');
        if (!items.length) return;
        if (e.key === 'ArrowDown') {
          currentFocus++;
          if (currentFocus >= items.length) currentFocus = 0;
          items.forEach((el, idx) => el.classList.toggle('active', idx === currentFocus));
          e.preventDefault();
        } else if (e.key === 'ArrowUp') {
          currentFocus--;
          if (currentFocus < 0) currentFocus = items.length - 1;
          items.forEach((el, idx) => el.classList.toggle('active', idx === currentFocus));
          e.preventDefault();
        } else if (e.key === 'Enter') {
          if (currentFocus > -1 && items[currentFocus]) {
            items[currentFocus].click();
            e.preventDefault();
          }
        } else {
          currentFocus = -1;
        }
      });
    }
  });

  // Autocomplete parent siswa (Nama Orang Tua (username))
  document.addEventListener("DOMContentLoaded", function () {
    const input = document.getElementById('parent_id');
    const list = document.getElementById('parentSiswaAutocomplete');
    let currentFocus = -1;

    if (input) {
      input.addEventListener('input', async function () {
        const val = this.value.trim();
        list.innerHTML = '';
        list.style.display = 'none';
        if (val.length < 1) return;
        try {
          const res = await fetch(`/api/parent-siswa?q=${encodeURIComponent(val)}`);
          if (!res.ok) return;
          const data = await res.json();
          if (Array.isArray(data) && data.length > 0) {
            data.forEach(parent => {
              const label = parent.username
                ? `${parent.parent_name} (${parent.username})`
                : parent.parent_name;
              const item = document.createElement('button');
              item.type = 'button';
              item.className = 'list-group-item list-group-item-action';
              item.textContent = label;
              item.onclick = function () {
                input.value = label;
                input.dataset.parentId = parent.parent_id; // simpan id jika perlu
                list.innerHTML = '';
                list.style.display = 'none';
              };
              list.appendChild(item);
            });
            list.style.display = 'block';
          }
        } catch (e) {}
      });

      document.addEventListener('click', function (e) {
        if (!input.contains(e.target) && !list.contains(e.target)) {
          list.innerHTML = '';
          list.style.display = 'none';
        }
      });

      input.addEventListener('keydown', function(e) {
        const items = list.querySelectorAll('.list-group-item');
        if (!items.length) return;
        if (e.key === 'ArrowDown') {
          currentFocus++;
          if (currentFocus >= items.length) currentFocus = 0;
          items.forEach((el, idx) => el.classList.toggle('active', idx === currentFocus));
          e.preventDefault();
        } else if (e.key === 'ArrowUp') {
          currentFocus--;
          if (currentFocus < 0) currentFocus = items.length - 1;
          items.forEach((el, idx) => el.classList.toggle('active', idx === currentFocus));
          e.preventDefault();
        } else if (e.key === 'Enter') {
          if (currentFocus > -1 && items[currentFocus]) {
            items[currentFocus].click();
            e.preventDefault();
          }
        } else {
          currentFocus = -1;
        }
      });
    }
  });

  // Handler tombol hapus (semua tabel)
  document.addEventListener("DOMContentLoaded", function () {
    const modal = document.getElementById('modalDeleteConfirm');
    const form = document.getElementById('formDeleteConfirm');
    const text = document.getElementById('deleteConfirmText');
    let bsModal = null;
    if (window.bootstrap && bootstrap.Modal) {
      bsModal = bootstrap.Modal.getOrCreateInstance(modal);
    }

    document.querySelectorAll('.btn-delete').forEach(btn => {
      btn.addEventListener('click', function () {
        const type = btn.getAttribute('data-type');
        const id = btn.getAttribute('data-id');
        const name = btn.getAttribute('data-name') || '';
        let action = '';
        let label = '';
        if (type === 'user') {
          action = `/user/delete/${id}`;
          label = `user <b>${name}</b>`;
        } else if (type === 'teacher') {
          action = `/guru/delete/${id}`;
          label = `guru <b>${name}</b>`;
        } else if (type === 'parent') {
          action = `/orangtua/delete/${id}`;
          label = `orang tua <b>${name}</b>`;
        } else if (type === 'student') {
          action = `/siswa/delete/${id}`;
          label = `siswa <b>${name}</b>`;
        }
        form.action = action;
        text.innerHTML = `Apakah Anda yakin ingin menghapus ${label}?`;
        if (bsModal) bsModal.show();
        else $(modal).modal('show');
      });
    });
  });

  // Modal Edit User
  document.addEventListener("DOMContentLoaded", function () {
    const modal = document.getElementById('modalEditUser');
    const form = document.getElementById('formEditUser');
    let bsModal = null;
    if (window.bootstrap && bootstrap.Modal) {
      bsModal = bootstrap.Modal.getOrCreateInstance(modal);
    }

    document.querySelectorAll('.btn-edit-user').forEach(btn => {
      btn.addEventListener('click', function () {
        const id = btn.getAttribute('data-id');
        const username = btn.getAttribute('data-username') || '';
        const email = btn.getAttribute('data-email') || '';
        const role = btn.getAttribute('data-role') || '';
        const wa = btn.getAttribute('data-wa') || '';
        form.action = `/user/edit/${id}`;
        form.querySelector('#edit_username').value = username;
        form.querySelector('#edit_email').value = email === 'N/A' ? '' : email;
        form.querySelector('#edit_role').value = role;
        form.querySelector('#edit_wa_num').value = wa;
        form.querySelector('#edit_password').value = '';
        if (bsModal) bsModal.show();
        else $(modal).modal('show');
      });
    });
  });

  // Modal Edit Guru
  document.addEventListener("DOMContentLoaded", function () {
    const modal = document.getElementById('modalEditGuru');
    const form = document.getElementById('formEditGuru');
    const previewImg = document.getElementById('previewEditGuru');
    const currentPhotoDiv = document.getElementById('currentPhotoGuru');
    let bsModal = null;
    if (window.bootstrap && bootstrap.Modal) {
      bsModal = bootstrap.Modal.getOrCreateInstance(modal);
    }

    document.querySelectorAll('.btn-edit-teacher').forEach(btn => {
      btn.addEventListener('click', function () {
        const id = btn.getAttribute('data-id');
        const name = btn.getAttribute('data-name') || '';
        const nip = btn.getAttribute('data-nip') || '';
        const photo = btn.getAttribute('data-photo') || '';
        // Username guru: Anda bisa mengambil username dari user_id jika ingin menampilkan username, atau biarkan kosong
        // Untuk demo, field username dikosongkan (atau bisa diisi jika ada data username)
        form.action = `/guru/edit/${id}`;
        form.querySelector('#edit_teacher_name').value = name;
        form.querySelector('#edit_nip').value = nip;
        form.querySelector('#edit_username_guru').value = '';
        form.querySelector('#edit_teacher_photo').value = '';
        previewImg.style.display = 'none';
        if (photo && photo !== 'default/default.jpg') {
          currentPhotoDiv.innerHTML = `<small>Foto saat ini:</small><br><img src="/img/profile/${photo}" class="img-thumbnail" style="max-width:100px;">`;
        } else {
          currentPhotoDiv.innerHTML = '';
        }
        if (bsModal) bsModal.show();
        else $(modal).modal('show');
      });
    });

    // Autocomplete username guru pada modal edit
    const input = document.getElementById('edit_username_guru');
    const list = document.getElementById('editUsernameGuruAutocomplete');
    let currentFocus = -1;

    if (input) {
      input.addEventListener('input', async function () {
        const val = this.value.trim();
        list.innerHTML = '';
        list.style.display = 'none';
        if (val.length < 1) return;
        try {
          const res = await fetch(`/api/teacher-usernames?q=${encodeURIComponent(val)}`);
          if (!res.ok) return;
          const data = await res.json();
          if (Array.isArray(data) && data.length > 0) {
            data.forEach(username => {
              const item = document.createElement('button');
              item.type = 'button';
              item.className = 'list-group-item list-group-item-action';
              item.textContent = username;
              item.onclick = function () {
                input.value = username;
                list.innerHTML = '';
                list.style.display = 'none';
              };
              list.appendChild(item);
            });
            list.style.display = 'block';
          }
        } catch (e) {}
      });

      document.addEventListener('click', function (e) {
        if (!input.contains(e.target) && !list.contains(e.target)) {
          list.innerHTML = '';
          list.style.display = 'none';
        }
      });

      input.addEventListener('keydown', function(e) {
        const items = list.querySelectorAll('.list-group-item');
        if (!items.length) return;
        if (e.key === 'ArrowDown') {
          currentFocus++;
          if (currentFocus >= items.length) currentFocus = 0;
          items.forEach((el, idx) => el.classList.toggle('active', idx === currentFocus));
          e.preventDefault();
        } else if (e.key === 'ArrowUp') {
          currentFocus--;
          if (currentFocus < 0) currentFocus = items.length - 1;
          items.forEach((el, idx) => el.classList.toggle('active', idx === currentFocus));
          e.preventDefault();
        } else if (e.key === 'Enter') {
          if (currentFocus > -1 && items[currentFocus]) {
            items[currentFocus].click();
            e.preventDefault();
          }
        } else {
          currentFocus = -1;
        }
      });
    }
  });

  // Modal Edit Orang Tua
  document.addEventListener("DOMContentLoaded", function () {
    const modal = document.getElementById('modalEditParent');
    const form = document.getElementById('formEditParent');
    let bsModal = null;
    if (window.bootstrap && bootstrap.Modal) {
      bsModal = bootstrap.Modal.getOrCreateInstance(modal);
    }

    document.querySelectorAll('.btn-edit-parent').forEach(btn => {
      btn.addEventListener('click', function () {
        const id = btn.getAttribute('data-id');
        const name = btn.getAttribute('data-name') || '';
        // Username orang tua: Anda bisa mengambil username dari user_id jika ingin menampilkan username, atau biarkan kosong
        form.action = `/orangtua/edit/${id}`;
        form.querySelector('#edit_parent_name').value = name;
        form.querySelector('#edit_username_ot').value = '';
        if (bsModal) bsModal.show();
        else $(modal).modal('show');
      });
    });

    // Autocomplete username orang tua pada modal edit
    const input = document.getElementById('edit_username_ot');
    const list = document.getElementById('editUsernameParentAutocomplete');
    let currentFocus = -1;

    if (input) {
      input.addEventListener('input', async function () {
        const val = this.value.trim();
        list.innerHTML = '';
        list.style.display = 'none';
        if (val.length < 1) return;
        try {
          const res = await fetch(`/api/parent-usernames?q=${encodeURIComponent(val)}`);
          if (!res.ok) return;
          const data = await res.json();
          if (Array.isArray(data) && data.length > 0) {
            data.forEach(username => {
              const item = document.createElement('button');
              item.type = 'button';
              item.className = 'list-group-item list-group-item-action';
              item.textContent = username;
              item.onclick = function () {
                input.value = username;
                list.innerHTML = '';
                list.style.display = 'none';
              };
              list.appendChild(item);
            });
            list.style.display = 'block';
          }
        } catch (e) {}
      });

      document.addEventListener('click', function (e) {
        if (!input.contains(e.target) && !list.contains(e.target)) {
          list.innerHTML = '';
          list.style.display = 'none';
        }
      });

      input.addEventListener('keydown', function(e) {
        const items = list.querySelectorAll('.list-group-item');
        if (!items.length) return;
        if (e.key === 'ArrowDown') {
          currentFocus++;
          if (currentFocus >= items.length) currentFocus = 0;
          items.forEach((el, idx) => el.classList.toggle('active', idx === currentFocus));
          e.preventDefault();
        } else if (e.key === 'ArrowUp') {
          currentFocus--;
          if (currentFocus < 0) currentFocus = items.length - 1;
          items.forEach((el, idx) => el.classList.toggle('active', idx === currentFocus));
          e.preventDefault();
        } else if (e.key === 'Enter') {
          if (currentFocus > -1 && items[currentFocus]) {
            items[currentFocus].click();
            e.preventDefault();
          }
        } else {
          currentFocus = -1;
        }
      });
    }
  });

  // Modal Edit Siswa
  document.addEventListener("DOMContentLoaded", function () {
    const modal = document.getElementById('modalEditSiswa');
    const form = document.getElementById('formEditSiswa');
    const previewImg = document.getElementById('previewEditSiswa');
    const currentPhotoDiv = document.getElementById('currentPhotoSiswa');
    let bsModal = null;
    if (window.bootstrap && bootstrap.Modal) {
      bsModal = bootstrap.Modal.getOrCreateInstance(modal);
    }

    document.querySelectorAll('.btn-edit-student').forEach(btn => {
      btn.addEventListener('click', function () {
        const id = btn.getAttribute('data-id');
        form.action = `/siswa/edit/${id}`;
        form.querySelector('#edit_student_name').value = btn.getAttribute('data-name') || '';
        form.querySelector('#edit_nis').value = btn.getAttribute('data-nis') || '';
        form.querySelector('#edit_nisn').value = btn.getAttribute('data-nisn') || '';
        form.querySelector('#edit_dob').value = btn.getAttribute('data-dob') || '';
        form.querySelector('#edit_pob').value = btn.getAttribute('data-pob') || '';
        form.querySelector('#edit_address').value = btn.getAttribute('data-address') || '';
        form.querySelector('#edit_rfid').value = btn.getAttribute('data-rfid') || '';
        form.querySelector('#edit_username_siswa').value = '';
        form.querySelector('#edit_student_photo').value = '';
        previewImg.style.display = 'none';
        const photo = btn.getAttribute('data-photo') || '';
        if (photo && photo !== 'default/default.jpg') {
          currentPhotoDiv.innerHTML = `<small>Foto saat ini:</small><br><img src="/img/profile/${photo}" class="img-thumbnail" style="max-width:100px;">`;
        } else {
          currentPhotoDiv.innerHTML = '';
        }
        // Untuk parent_id, Anda bisa menampilkan label "Nama Ortu (username)" jika ingin, atau biarkan kosong
        form.querySelector('#edit_parent_id').value = '';
        if (bsModal) bsModal.show();
        else $(modal).modal('show');
      });
    });

    // Autocomplete username siswa pada modal edit
    const inputUsername = document.getElementById('edit_username_siswa');
    const listUsername = document.getElementById('editUsernameSiswaAutocomplete');
    let currentFocusUsername = -1;

    if (inputUsername) {
      inputUsername.addEventListener('input', async function () {
        const val = this.value.trim();
        listUsername.innerHTML = '';
        listUsername.style.display = 'none';
        if (val.length < 1) return;
        try {
          const res = await fetch(`/api/student-usernames?q=${encodeURIComponent(val)}`);
          if (!res.ok) return;
          const data = await res.json();
          if (Array.isArray(data) && data.length > 0) {
            data.forEach(username => {
              const item = document.createElement('button');
              item.type = 'button';
              item.className = 'list-group-item list-group-item-action';
              item.textContent = username;
              item.onclick = function () {
                inputUsername.value = username;
                listUsername.innerHTML = '';
                listUsername.style.display = 'none';
              };
              listUsername.appendChild(item);
            });
            listUsername.style.display = 'block';
          }
        } catch (e) {}
      });

      document.addEventListener('click', function (e) {
        if (!inputUsername.contains(e.target) && !listUsername.contains(e.target)) {
          listUsername.innerHTML = '';
          listUsername.style.display = 'none';
        }
      });

      inputUsername.addEventListener('keydown', function(e) {
        const items = listUsername.querySelectorAll('.list-group-item');
        if (!items.length) return;
        if (e.key === 'ArrowDown') {
          currentFocusUsername++;
          if (currentFocusUsername >= items.length) currentFocusUsername = 0;
          items.forEach((el, idx) => el.classList.toggle('active', idx === currentFocusUsername));
          e.preventDefault();
        } else if (e.key === 'ArrowUp') {
          currentFocusUsername--;
          if (currentFocusUsername < 0) currentFocusUsername = items.length - 1;
          items.forEach((el, idx) => el.classList.toggle('active', idx === currentFocusUsername));
          e.preventDefault();
        } else if (e.key === 'Enter') {
          if (currentFocusUsername > -1 && items[currentFocusUsername]) {
            items[currentFocusUsername].click();
            e.preventDefault();
          }
        } else {
          currentFocusUsername = -1;
        }
      });
    }

    // Autocomplete parent siswa pada modal edit
    const inputParent = document.getElementById('edit_parent_id');
    const listParent = document.getElementById('editParentSiswaAutocomplete');
    let currentFocusParent = -1;

    if (inputParent) {
      inputParent.addEventListener('input', async function () {
        const val = this.value.trim();
        listParent.innerHTML = '';
        listParent.style.display = 'none';
        if (val.length < 1) return;
        try {
          const res = await fetch(`/api/parent-siswa?q=${encodeURIComponent(val)}`);
          if (!res.ok) return;
          const data = await res.json();
          if (Array.isArray(data) && data.length > 0) {
            data.forEach(parent => {
              const label = parent.username
                ? `${parent.parent_name} (${parent.username})`
                : parent.parent_name;
              const item = document.createElement('button');
              item.type = 'button';
              item.className = 'list-group-item list-group-item-action';
              item.textContent = label;
              item.onclick = function () {
                inputParent.value = label;
                inputParent.dataset.parentId = parent.parent_id;
                listParent.innerHTML = '';
                listParent.style.display = 'none';
              };
              listParent.appendChild(item);
            });
            listParent.style.display = 'block';
          }
        } catch (e) {}
      });

      document.addEventListener('click', function (e) {
        if (!inputParent.contains(e.target) && !listParent.contains(e.target)) {
          listParent.innerHTML = '';
          listParent.style.display = 'none';
        }
      });

      inputParent.addEventListener('keydown', function(e) {
        const items = listParent.querySelectorAll('.list-group-item');
        if (!items.length) return;
        if (e.key === 'ArrowDown') {
          currentFocusParent++;
          if (currentFocusParent >= items.length) currentFocusParent = 0;
          items.forEach((el, idx) => el.classList.toggle('active', idx === currentFocusParent));
          e.preventDefault();
        } else if (e.key === 'ArrowUp') {
          currentFocusParent--;
          if (currentFocusParent < 0) currentFocusParent = items.length - 1;
          items.forEach((el, idx) => el.classList.toggle('active', idx === currentFocusParent));
          e.preventDefault();
        } else if (e.key === 'Enter') {
          if (currentFocusParent > -1 && items[currentFocusParent]) {
            items[currentFocusParent].click();
            e.preventDefault();
          }
        } else {
          currentFocusParent = -1;
        }
      });
    }
  });

  // Script untuk menerima data RFID via WebSocket, embed ke input, dan tampilkan alert bootstrap
  (function() {
    // Hanya aktif di halaman ini
    const ws = new WebSocket(`ws://${window.location.host}`);
    ws.onmessage = function(event) {
      try {
        const data = JSON.parse(event.data);
        const uid = data.uid; // Encrypted UID

        // Cari input aktif, jika tidak ada fallback ke #rfid-input
        let targetInput = document.activeElement;
        if (!(targetInput && (targetInput.tagName === 'INPUT' || targetInput.tagName === 'TEXTAREA'))) {
          targetInput = document.getElementById('rfid-input');
        }
        if (targetInput) {
          targetInput.value = uid;
        }

        // Tampilkan alert bootstrap dinamis (tanpa konfirmasi, auto-dismiss)
        showRFIDAlert('Menerima data RFID');

      } catch (e) {
        // ignore
      }
    };

    // Fungsi untuk menampilkan alert bootstrap dinamis
    function showRFIDAlert(message) {
      // Hapus alert lama jika ada
      let old = document.getElementById('rfid-alert');
      if (old) old.remove();

      const alertDiv = document.createElement('div');
      alertDiv.id = 'rfid-alert';
      alertDiv.className = 'alert alert-success alert-dismissible fade show position-fixed';
      alertDiv.style.top = '30px';
      alertDiv.style.right = '30px';
      alertDiv.style.minWidth = '300px';
      alertDiv.style.maxWidth = '90vw';
      alertDiv.style.zIndex = 2000;
      alertDiv.style.boxShadow = '0 2px 16px rgba(0,0,0,0.15)';
      alertDiv.innerHTML = `
        <span>${message}</span>
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
      `;
      document.body.appendChild(alertDiv);

      setTimeout(() => {
        if (window.bootstrap && bootstrap.Alert) {
          const bsAlert = bootstrap.Alert.getOrCreateInstance(alertDiv);
          bsAlert.close();
        } else {
          alertDiv.classList.remove('show');
          setTimeout(() => alertDiv.remove(), 500);
        }
      }, 2000);
    }
  })();
</script>
